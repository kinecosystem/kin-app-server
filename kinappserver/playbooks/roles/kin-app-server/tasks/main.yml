- name: "cron to periodically reboot server 1"
  when: inventory_hostname == "kin-app-server-prod-1"
  cron:
    name: "periodically reboot server"
    job: "/usr/bin/python3 /opt/kin-app-server/kinappserver/helpers/reboot_server.py"
    minute: "*/13" # run every 30 minutes on all machines with a 10 minutes offset

- name: "cron to periodically reboot server 2"
  when: inventory_hostname == "kin-app-server-prod-2"
  cron:
    name: "periodically reboot server"
    job: "/usr/bin/python3 /opt/kin-app-server/kinappserver/helpers/reboot_server.py"
    minute: "*/17" # run every 39 minutes on all machines with a 10 minutes offset

- name: Run "apt-get update"
  apt:
    update_cache: yes

- name: Install nginx
  apt:
    name: nginx
    state: present

- name: Install supervisor
  apt:
    name: supervisor
    state: present

- name: Install list of packages
  apt: name={{item}} state=installed
  with_items:
       - git
       - supervisor
       - python3-pip
       - postgresql
       - postgresql-contrib

- name: pip Install uwsgi
  pip:
    name: uwsgi

- name: add entry to sysctrl for somaxconn - needed for uwsgi's connections
  sysctl:
    name: net.core.somaxconn
    value: 4096
    sysctl_set: yes
    state: present
    reload: yes

- name: Clone the kin-core-python repo
  git:
    repo=https://github.com/kinfoundation/kin-core-python.git
    dest=/opt/kin-core-python
    accept_hostkey=true
    force=yes

- name: pip install reqs for the kin-core-python
  pip:
    requirements: /opt/kin-core-python/requirements.txt 

- name: install the kin-core-python from the local copy. force upgrade to take any changes.
  pip: 
    name: /opt/kin-core-python
    state: latest

- name: Clone the kin-app-server repo
  git:
    repo=https://github.com/kinfoundation/kin-app-server.git
    dest=/opt/kin-app-server
    accept_hostkey=true
    force=yes
    version={{kin_app_server_branch_name}}

- name: Clone the kinit-client-validation-server-module
  git:
    repo=git@github.com:kinecosystem/kinit-client-validation-server-module.git
    dest=/opt/kinit-client-validation-server-module
    accept_hostkey=true
    force=yes
    version=master
    key_file=/home/ubuntu/.ssh/id_rsa

- name: install the kinit-client-validation-server-module  from the local copy. force upgrade to take any changes.
  pip: 
    name: /opt/kinit-client-validation-server-module 
    state: latest

- name: pip install reqs
  pip:
    requirements: /opt/kin-app-server/kinappserver/requirements.txt 

- name: Template the config file
  template:
    src: templates/kinappserver/config.py.jinja2
    dest: /opt/kin-app-server/kinappserver/config.py
    
- name: install the kin-app-server from the local copy. force upgrade to take any changes.
  pip: 
    name: /opt/kin-app-server
    state: latest

- name: template the supervisord config file
  template:
    src: "{{ role_path }}/templates/etc/supervisor/conf.d/kinappserver.conf.jinja2"
    dest: /etc/supervisor/conf.d/kinappserver.conf
    mode:

- name: template the supervisord config file
  template:
    src: "{{ role_path }}/templates/etc/supervisor/conf.d/kinappworker-fast.conf.jinja2"
    dest: /etc/supervisor/conf.d/kinappworker-fast.conf
    mode:

- name: template the supervisord config file
  template:
    src: "{{ role_path }}/templates/etc/supervisor/conf.d/kinappworker-slow.conf.jinja2"
    dest: /etc/supervisor/conf.d/kinappworker-slow.conf
    mode:

- name: update supervisor:kinappworker
  supervisorctl:
    name: kinappserver
    state: restarted

- name: update supervisor:kinappworker-fast
  supervisorctl:
    name: kinappworker-fast
    state: restarted

- name: update supervisor:kinappworker-slow
  supervisorctl:
    name: kinappworker-slow
    state: restarted

- name: template the nginx kinappserver config file
  template:
    src: templates/etc/nginx/sites-enabled/kinappserver
    dest: /etc/nginx/sites-enabled/kinappserver

- name: template the nginx default config file (with the /internal endpoint)
  template:
    src: templates/etc/nginx/sites-enabled/default
    dest: /etc/nginx/sites-enabled/default

- name: service nginx restart
  service:
    name: nginx
    state: restarted

# there's a dedicated play for restarting supervisor and nginx
# which removes the servers from the load-balancer and does it one-by-one. once
# this play is done, you need to run the restart one

# all the cron tasks that need to run on all machines:
# (for those that need to run on just one, see the kin-app-server-cron role)
- cron:
    name: "gather periodic db-stats"
    job: "/usr/bin/python3 /opt/kin-app-server/kinappserver/db_stats.py"
    # needs to run on all machines

- cron:
    name: "gather periodic xlm,kin balance"
    job: "/usr/bin/python3 /opt/kin-app-server/kinappserver/track_balance.py"
    # needs to run on all machines

- cron:
    name: "periodically track exceptions in the log"
    job: "/opt/kin-app-server/kinappserver/cron/track_exceptions.sh"
    minute: "*/5" # run every 5 minutes on all machines
